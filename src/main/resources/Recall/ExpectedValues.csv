_ -->_ @Override public boolean ID<0>() { return ID.ID<0>(); }$128413
ID ID = ID.ID(EXPR, EXPR); --> ID ID = ID.ID(EXPR, EXPR);$1186
for (AudioTrack audioTrack : ID.ID) { <...> --> <...>$1
long lookupMethodInPool(long metaspaceConstantPool, int cpi, byte opcode, long[] unresolvedInfo); --> long lookupKlassInPool(long metaspaceConstantPool, int cpi);$1
ID ID = EXPR; --> final ID ID = EXPR;$30
ID.ID(EXPR, EXPR); --> ID();$24
public int read(char cbuf[], int off, int len) throws IOException { --> public int read(char[] cbuf, int off, int len) throws IOException {$1
_ -->public boolean ID<0>() { return ID.ID<0>(); }$14
(ID binOP LT) binOP (ID binOP LT) --> <...>$14
import static ID.ID.ID.ID.ID; -->_$106
if (EXPR<0>) ID = QueryParamEntity.empty(); --> if (EXPR<0>) { ID = QueryParamEntity.empty(); }$2
ID(); ID(); --> ID(); ID();$9
_ -->import static org.graalvm.compiler.hotspot.HotSpotForeignCallLinkage.RegisterEffect.DESTROYS_REGISTERS;$2
ID<0>(LT, ID); --> ID<0>(false);$2
searchHit.getSource().clear(); searchHit.getSource().putAll(results); --> searchHit.getSourceAsMap().clear(); searchHit.getSourceAsMap().putAll(results);$1
ID(EXPR); ID(EXPR); --> ID(EXPR); ID(EXPR);$184
throw EXPR; --> throw new GraalError(EXPR);$1
this.id = result.getRuntime().getBitcodeID(); -->_$2
<...> --> return ID.ID(EXPR, EXPR);$3147
return ID; --> return EXPR;$1842
int remainBytes = EXPR<0> = EXPR --> int remainBytes = EXPR<0> = EXPR$13609
import org.ID.ID.ID.ID; -->import org.ID.ID.ID.ID; <...>$676
this.ID<0> = ID.ID(ID<0>); --> this.ID<0> = ID<0>;$22
_ -->import static <...>;$6020
if (ID<0> == null) return; --> if (ID<0> == null) { return; }$5
public static double[][] ID(float[] ID<0>) { return EXPR --> static double[][] ID(float[] ID<0>) { return EXPR$0
GalleryComment comment = ID[EXPR]; --> GalleryComment comment = ID.ID[EXPR];$1
_ --> for (ID ID<0> = EXPR; ID<0> binOP EXPR; ID<0> unOP) { <...>$2
println(e) --> e$143
import com.oracle.ID.ID.ID.*; -->_$2916
<...> --> return Optional.of(EXPR);$67
import static <...> -->_$0
try (ToLibGraalScope<TruffleToLibGraal.Id> s = new ToLibGraalScope<>(InitializeRuntime, env)) { --> try (JNILibGraalScope<TruffleToLibGraal.Id> s = new JNILibGraalScope<>(InitializeRuntime, env)) {$1
_ --> return ID.getValue(<...>);$12
_ -->import ID.ID.ID; import ID.ID.ID; import ID.ID.ID;$15904
_ -->import static ID.ID.ID.ID;$968
byte[] memo = hasChildren ? null : LEAF_MEMO; --> byte[] memo = hasChildren ? null : NO_MEMO;$2
_ --> EXPR.ID(EXPR, LT);$419
return EXPR; --> return useLibraryConstant(EXPR);$1
ID(ID, ID); -->_$146
_ -->import com.oracle.ID.ID.ID.ID;$7718
t = PrimitiveType.I32; --> ty = PrimitiveType.I32;$2
ID<0> = this; --> ID<0> = this.ID();$7
return types; --> return foundTypes;$4
package <...>; -->package ID.ID.ID.ID;$3393
ID OP ID; --> ID OP EXPR;$319
ID<0>(ID<1>, args, context); --> ID<0>(ID<1>, args, intrinsic);$1
ID<0>.ID<1>(LT, ID) --> ID<0>.ID<1>(LT, EXPR)$971
codeCache.ID(method, compResult); --> <...>$2
final ID<0> ID<1> = EXPR; --> final ID<0> ID<1> = EXPR;$302
ID<0>(LT); --> ID<0>(LT);$903
Assert.assertEquals(1, test(<...>)); --> runTest("test", <...>);$88
import <...>; -->import <...>; <...>$24264
@JsonProperty -->_$110
Arrays.sort(files); --> Arrays.sort(files, naturalComparator);$1
ID slotSize = WordFactory.unsigned(EXPR); -->_$1
ID = LT; --> ID = LT; ID = LT;$14
ID OP ID; = ID OP EXPR;$0
return ID; --> return EXPR binOP EXPR;$38
for (AudioTrack audioTrack : EXPR) { <...> --> <...>$0
return null; --> throw EXPR;$6
<...> --> merge.setNext(EXPR);$3
_ -->import com.oracle.jvmci.asm.sparc.*;$34
<...> --> new ID[]{}$42
_ -->import java.util.Optional; import java.util.Set; import java.util.concurrent.Executors;$405
_ --> res = res binOP LT + (vararg ? LT : LT);$1
log.debug(LT, ID); --> LOG.debug(LT, ID);$19
final Map<String, String> group = EXPR; --> final Map<String, String> group = EXPR;$0
annotationWriter.write(appendable, context).append(LT); --> annotationWriter.write(appendable, context).append(ID);$1
_ -->_ @Override protected ID getToolSupport(ID l) { return l.getToolSupport(); } _ @Override protected ID getDebugSupport(ID l) { return l.getDebugSupport(); }$128413
package com.oracle.max.graal.ID.ID; -->package com.oracle.graal.ID.ID;$934
public void ID() { --> public void profileInlinedCall() { <...>$1
import android.support.design.widget.FloatingActionButton; -->_$3
return ID; --> return EXPR | EXPR;$0
_ -->import EXPR; import EXPR; import EXPR;$0
return isHostConfiguration() ? (label + " (host)") : label.toString(); --> return label.toString();$1
ID ID = ID.ID(); -->_$368
ID unOP; --> ID unOP;$55
public void generate(NodeLIRBuilderTool gen, LIRGenerationResult res) { --> public void generate(NodeLIRBuilderTool gen) {$3
import <...> -->_$42230
Collection<ID> ID(<...>) { --> Collection<ID> generateSyntheticBean(<...>) {$2
@SuppressWarnings(<...>) -->_$6289
this.ID = EXPR; -->_$1419
_ --> if (EXPR binOP EXPR) { return; }$62
return sub(left, toComparableValue.execute(right)); --> return sub(left, toComparableValue.executeWithTarget(right));$1
_ -->import io.ID.ID.ID.ID;$1759
if (type instanceof IntegerType) { return ID.ID(EXPR, EXPR); --><...>$1
public static double[][] ID(float[] ID<0>) { return EXPR; --> static double[][] ID(float[] ID<0>) { return EXPR;$1
throw JVMCIError.shouldNotReachHere(); --> throw GraalError.shouldNotReachHere();$179
@Before public void ID() throws ID { --> @BeforeClass public static void ID() throws ID {$5
ID<0>.incrementHost(EXPR); --> ID<0>.incrementSource(EXPR);$5
StructuredGraph graph = parseEager(method, AllowAssumptions.YES, options); --> StructuredGraph graph = parseEager(method, AllowAssumptions.YES, goptions);$1
final ID<0> ID<1> = EXPR --> final ID<0> ID<1> = EXPR;$544
